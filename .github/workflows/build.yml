name: Build

on:
    push:
        branches:
            - "*"
        paths-ignore:
            - ".gitignore"
    pull_request:
        branches:
            - "*"
        paths-ignore:
            - ".gitignore"
    workflow_dispatch:
permissions: write-all
jobs:
    build:
        runs-on: ubuntu-latest
        name: "Build and test"
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4
            -   uses: ./.github/actions/setup-normal-workspace
            -   name: Build with Gradle
                run: ./gradlew assemble -x test --stacktrace
            -   uses: actions/upload-artifact@v4
                name: Upload development build
                with:
                    name: "Development Build"
                    path: build/libs/*.jar
            -   name: Test with Gradle
                run: ./gradlew test
            -   uses: actions/upload-artifact@v4
                name: "Upload test report"
                if: ${{ !cancelled() }}
                with:
                    name: "Test Results"
                    path: versions/1.8.9/build/reports/tests/test/
    detekt:
        name: Run detekt
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4
            -   uses: ./.github/actions/setup-normal-workspace
            # detektMain is a LOT slower than detekt, but it does type analysis
            -   name: Run detekt main (w/typing analysis)
                run: |
                    ./gradlew detektMain --stacktrace
            -   name: Annotate detekt failures
                if: ${{ !cancelled() }}
                run: |
                    chmod +x .github/scripts/process_detekt_sarif.sh
                    ./.github/scripts/process_detekt_sarif.sh versions/1.8.9/build/reports/detekt/main.sarif
    detekt_comment:
        name: Comment detekt failures on PR
        runs-on: ubuntu-latest
        needs: detekt
        if: ${{ failure() && github.event_name == 'pull_request' }}
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4
            -   name: Process detekt SARIF and create comment
                run: |
                    chmod +x .github/scripts/process_detekt_sarif.sh
                    ./.github/scripts/process_detekt_sarif.sh versions/1.8.9/build/reports/detekt/main.sarif > detekt_output.txt
                    
                    DETEKT_OUTPUT=$(cat detekt_output.txt)
                
                    COMMENT="### One or more Detekt Failures were detekted: \n\n"
                        while read -r line; do
                      # Extract the full file path and line number using regex
                        FILE_PATH=$(echo "$line" | grep -oP '(?<=file=)[^,]+')
                        LINE_NUMBER=$(echo "$line" | grep -oP '(?<=line=)\d+')
                      
                      # Extract just the file name from the file path
                        FILE_NAME=$(basename "$FILE_PATH")
                      
                      # Clean up the line using pure bash to remove everything between "::" and "::"
                        CLEAN_MESSAGE="${line//::*/}" # Removes everything starting from "::"
                    
                    # Append the comment with the cleaned-up message
                    COMMENT+="- [ ] [$FILE_NAME#L$LINE_NUMBER](https://github.com/${GITHUB_REPOSITORY}/blob/${GITHUB_SHA}/${FILE_PATH/#file:\/\/\/C:\/Users\/david\/source\/repos\/SkyHanni/}#L$LINE_NUMBER): $CLEAN_MESSAGE\n"
                        done <<< "$DETEKT_OUTPUT"
                    
                    echo "$COMMENT" > detekt_comment.txt
            -   name: Add comment to PR
                if: failure()
                uses: actions/github-script@v6
                with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    script: |
                        const fs = require('fs');
                        const commentBody = fs.readFileSync('detekt_comment.txt', 'utf8');
                        
                        github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: commentBody
                        })

    preprocess:
        runs-on: ubuntu-latest
        name: "Build multi version"
        env:
            SKIP_DETEKT: "true"
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4
            -   uses: ./.github/actions/setup-normal-workspace
            -   name: Enable preprocessor
                run: |
                    mkdir -p .gradle
                    echo skyhanni.multi-version=preprocess-only > .gradle/private.properties
            -   name: Build with Gradle
                run: ./gradlew build --stacktrace
